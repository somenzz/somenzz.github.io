(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{806:function(s,e,a){"use strict";a.r(e);var t=a(7),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("你好，我是征哥，我相信不少人都会遇到这样的问题，容器本来运行的好好的，可是有一天报错退出了，重启容器依然报错，因为默认命令会崩溃，这意味着我无法启动容器后使用 docker exec。")]),s._v(" "),a("p",[s._v("今天分享：如何不重新构建镜像的情况解决容器报错的问题，只需要两步。")]),s._v(" "),a("h3",{attrs:{id:"第一步-将报错的容器保存至新的镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-将报错的容器保存至新的镜像"}},[s._v("#")]),s._v(" 第一步，将报错的容器保存至新的镜像")]),s._v(" "),a("p",[s._v("这一步是为了保存之前对容器的变更，如果没有对容器写入东西，这一步可以忽略。")]),s._v(" "),a("p",[s._v("先查看报错的容器，记录它的 CONTAINER_ID：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后将容器保存至新的镜像：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker commit "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CONTAINER_ID")]),s._v(" somenzz/image_xxx_new\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"第二步-从新的镜像启动一个新的命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-从新的镜像启动一个新的命令"}},[s._v("#")]),s._v(" 第二步，从新的镜像启动一个新的命令")]),s._v(" "),a("p",[s._v("比如说启动一个 shell，去修复容器：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker run -ti --entrypoint"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sh somenzz/image_xxx_new\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这里用到了 "),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/run/#/entrypoint-default-command-to-execute-at-runtime",target:"_blank",rel:"noopener noreferrer"}},[s._v("entrypoint"),a("OutboundLink")],1),s._v("，在构建镜像的时候，我们可以使用 CMD 或者 ENTRYPOINT 配置容器启动时的执行命令，但这两者有所不同：")]),s._v(" "),a("ul",[a("li",[s._v("CMD 命令设置容器启动后默认执行的命令及其参数，但 CMD 设置的命令能够被 docker run 命令后面的命令行参数替换。")]),s._v(" "),a("li",[s._v("ENTRYPOINT 配置容器启动时的执行命令，不会被忽略，一定会被执行，即使运行 docker run 时指定了其他命令。")])]),s._v(" "),a("h3",{attrs:{id:"我用-python-容器的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我用-python-容器的方法"}},[s._v("#")]),s._v(" 我用 Python 容器的方法")]),s._v(" "),a("p",[s._v("容器就是运行环境的打包。我在自己的服务器上安装了 Docker，那想获取一个 Python 环境，太简单了：")]),s._v(" "),a("p",[s._v("首先下载 Python 镜像，目前最新是 3.10.4，你可以 docker search python 查看。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker pull python\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后启动一个后台永不退出的容器：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker run --name mypython -dt python /bin/bash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后就可以随意使用 Python 了:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it mypython python "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("宿主机器的 Python 脚本，非容器内部"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果要安装依赖：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it mypython pip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" requests\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这样使用 Python 容器，不修改系统的一个文件，安全环保，不想用了，直接停止删除容器，再删除镜像。")]),s._v(" "),a("h2",{attrs:{id:"最后的话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后的话"}},[s._v("#")]),s._v(" 最后的话")]),s._v(" "),a("p",[s._v("以上就是自己使用 Docker 经常遇到的问题及解决方法，如果有帮助，还请点个赞，如果你有更好的方法，欢迎在下方留言分享。")])])}),[],!1,null,null,null);e.default=n.exports}}]);