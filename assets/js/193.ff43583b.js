(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{778:function(s,e,t){"use strict";t.r(e);var a=t(7),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("在我第一次用到 requirements.txt 时，是在一个虚拟环境中，我使用 pip freeze > requirements.txt 就把项目中的依赖项导出到了 txt 文件中，然后上传到 GitHub，别人在使用该项目时可以使用 pip install -r requirements.txt 就可以了，很方便不是吗。")]),s._v(" "),t("p",[s._v("不过，这样管理依赖的方式也不不完美。")]),s._v(" "),t("p",[s._v("比如说，我这个项目就依赖一个 Django，结果导出的 requirements.txt 却有这么多：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("❯ pip freeze\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("asgiref")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.5")]),s._v(".0\nbackports.zoneinfo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),s._v(".1\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Django")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.0")]),s._v(".1\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sqlparse")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.4")]),s._v(".2\n~/tmp ❯\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("也就是说，你安装依赖项 A ，它恰好有 B 作为子依赖项，B 又依赖 C。有时候你只是处于测试或者为了一个小小的 demo 也使用 pip 安装了一些包，那么这些依赖也会在 pip freeze 的列表中。")]),s._v(" "),t("p",[s._v("一段时间后，你在 requirements.txt 中看到的是 A、B、C、D、E、F、G、H，你并不知道直接或间接安装了哪些依赖项，因此现在更新甚至删除 F 成为一个问题，你必须搜索才能知道 F 是作为子依赖项安装的。最终会留下陈旧的依赖项并堆积垃圾或花费大量时间进行搜索并删除所有未使用的内容。")]),s._v(" "),t("p",[s._v("如何解决这个问题呢？")]),s._v(" "),t("p",[s._v("那就是用 pip-tools，具体方法如下：")]),s._v(" "),t("h4",{attrs:{id:"_1、安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装"}},[s._v("#")]),s._v(" 1、安装")]),s._v(" "),t("p",[s._v("首先，我们来创建一个虚拟环境，然后使用 pip 安装 pip-tools:")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("python3 -m venv venv\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" venv/bin/activate\npip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pip-tools\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"_2、创建-requirements-in-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建-requirements-in-文件"}},[s._v("#")]),s._v(" 2、创建 requirements.in 文件")]),s._v(" "),t("p",[s._v("现在，我们需要创建一个 requirements.in 文件，并且只包含项目的直接依赖项。每次您想要更新或包含依赖项时，都必须先修改 requirements.in 。它与 requirements.txt 的区别也很明显，那就是只包含直接依赖的库，也可以指定版本：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gyrsyipj06j30uw09yglq.jpg",alt:""}})]),s._v(" "),t("h4",{attrs:{id:"_3、编译-requirements-in"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、编译-requirements-in"}},[s._v("#")]),s._v(" 3、编译 requirements.in")]),s._v(" "),t("p",[t("code",[s._v("pip-compile requirements.in")]),s._v(" 可以直接生成 requirements.txt，但是你会发现这个 requirements.txt 跟 pip freeze 生成的有很大不同，你可以看到某个包是通过那个包引入的，依赖关系一目了然：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gyrt2wvil5j30us0hdwet.jpg",alt:""}})]),s._v(" "),t("p",[s._v("就这样，之前提到的问题已经不存在了，你拥有了管理依赖所需的所有信息。")]),s._v(" "),t("h4",{attrs:{id:"_4、额外功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、额外功能"}},[s._v("#")]),s._v(" 4、额外功能")]),s._v(" "),t("p",[s._v("除此之外，pip-tools 还提供了其他有用的功能：")]),s._v(" "),t("p",[s._v("1、升级包。")]),s._v(" "),t("p",[s._v("以 Django 为例：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("pip-compile --upgrade-package django\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这将自动更新您的 requirements.txt 文件，包括依赖项的修改。")]),s._v(" "),t("p",[s._v("2、同步包")]),s._v(" "),t("p",[s._v("为了使 virtualenv 与当前的 requirements.txt 文件同步，您可以简单地运行以下命令：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("pip-sync\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这将安装、升级或卸载 requirements.txt 文件中未包含的任何包。")]),s._v(" "),t("p",[s._v("有关 pip-tools 的更多详细信息，请参阅其"),t("a",{attrs:{href:"https://github.com/jazzband/pip-tools",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"最后的话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最后的话"}},[s._v("#")]),s._v(" 最后的话")]),s._v(" "),t("p",[s._v("好了，你又学到了一个新的技能 pip-tools，是精细化管理依赖的必备工具，如果觉得文章有帮助的话，请点赞、在看、转发三连支持，感谢老铁。")])])}),[],!1,null,null,null);e.default=r.exports}}]);