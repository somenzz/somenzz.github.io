(window.webpackJsonp=window.webpackJsonp||[]).push([[211],{791:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("你好，我是征哥，自己写代码怎么样都行，毕竟代码只有自己看。一旦有团队合作，或者要分享自己的代码，那么让自己的代码更专业可以为自己积累技术影响力。")]),s._v(" "),a("p",[s._v("今天就来分享如何使用 black、mypy、pylint 来让自己的代码更加专业。")]),s._v(" "),a("h2",{attrs:{id:"_1、用-black-来格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、用-black-来格式化"}},[s._v("#")]),s._v(" 1、用 black 来格式化")]),s._v(" "),a("p",[s._v("black 可以按照 PEP8 的规范进行格式化，同时注重代码的阅读体验。")]),s._v(" "),a("p",[s._v("如果问我对哪一种格式化工具最满意，毫无疑问是 black。写完代码，觉得代码看着不爽，就在命令行 black xxx.py 就可以了，也可以 black 一个目录，对该目录的所有文件进行格式化。")]),s._v(" "),a("p",[s._v("安装：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" black\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("除了简单的 black 文件名或目录，black 还有很多选项非常实用。")]),s._v(" "),a("p",[s._v("比如指定 Python 版本进行格式化：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("black -t py310 some_python_file.py\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#black --target-version=py310")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("设置代码行的长度：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("black -l "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("79")]),s._v(" some_python_file.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("仅仅检查而不修改：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("black --check some_python_file.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_2、用-mypy-来检查类型提示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、用-mypy-来检查类型提示"}},[s._v("#")]),s._v(" 2、用 mypy 来检查类型提示")]),s._v(" "),a("p",[s._v("mypy 是 Python 的静态类型检查器，可用于检查添加到 Python 代码中的类型注释。 mypy 在检查不同函数甚至模块之间的类型依赖关系方面非常强大。")]),s._v(" "),a("p",[s._v("之前写过一篇文章 "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzU0OTg3NzU2NA==&mid=2247489492&idx=1&sn=cb87a177919afa17996be39865d20670&chksm=fba87587ccdffc91e3bcd354a6bc240f14852d3adfc3ac335c6d456252b0b7b83cdb03412337#rd",target:"_blank",rel:"noopener noreferrer"}},[s._v("mypy 这个工具，让Python的类型提示变得非常实用"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("里面有安装、使用、配置的方法，这里就不再赘述。")]),s._v(" "),a("h2",{attrs:{id:"_3、使用-pylint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、使用-pylint"}},[s._v("#")]),s._v(" 3、使用 pylint")]),s._v(" "),a("p",[s._v("Pylint 是一个自动 Python 代码分析工具，可以检测编程错误并根据 PEP8 给出重构建议。")]),s._v(" "),a("p",[s._v("安装：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pylint\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ pylint some_python_scripts.py\n************* Module some_python_scripts\nsome_python_scripts.py:1:0: C0114: Missing module docstring "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("missing-module-docstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsome_python_scripts.py:5:16: C0103: Argument name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"n"')]),s._v(" doesn"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t conform to snake_case naming style (invalid-name)\nsome_python_scripts.py:5:0: C0116: Missing function or method docstring (missing-function-docstring)\nsome_python_scripts.py:21:0: C0116: Missing function or method docstring (missing-function-docstring)\nsome_python_scripts.py:21:18: W0621: Redefining name '")]),s._v("numbers' from outer scope "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("46")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("redefined-outer-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsome_python_scripts.py:27:14: C0209: Formatting a regular string "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" could be a f-string "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("consider-using-f-string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n------------------------------------------------------------------\nYour code has been rated at "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.50")]),s._v("/10 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("previous run: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.50")]),s._v("/10, +0.00"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("根据以上输出，重构代码。")]),s._v(" "),a("h2",{attrs:{id:"为-vscode-配置这三个工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为-vscode-配置这三个工具"}},[s._v("#")]),s._v(" 为 VSCode 配置这三个工具")]),s._v(" "),a("p",[s._v("1、为 VSCode 配置 black：")]),s._v(" "),a("p",[s._v("打开首选项 -> 设置，搜索 Python，按下图进行配置")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24egy1h1ljyjf6kgj21930u0abw.jpg",alt:""}})]),s._v(" "),a("p",[s._v("2、为 VSCode 配置 mypy：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24egy1h1lk2jph45j20y70u0ta6.jpg",alt:""}})]),s._v(" "),a("p",[s._v("3、为 VSCode 配置 pylint：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24egy1h1lk4g3jjnj20xm0u0myl.jpg",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"最后的话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后的话"}},[s._v("#")]),s._v(" 最后的话")]),s._v(" "),a("p",[s._v("本文分享了让代码更加专业的方法，希望有帮助，还请点在看、转发，帮助更多的朋友。")])])}),[],!1,null,null,null);t.default=e.exports}}]);