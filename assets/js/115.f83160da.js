(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{682:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("一开始，我认为 Python 的类型提示就是一个花瓶，看起来好看，但并没有实质的作用，因为即使类型写错了，或者传错了，程序仍然可以运行，直到我发现了 mypy 这个工具。今天就来聊一聊 mypy。")]),s._v(" "),a("p",[s._v("mypy 是 Python 中的静态类型检查器。写完带有类型提示的代码之后，先别运行行，用 mypy 命令来检查下你的代码，如果有错误，会提示你，这让 Python 的类型提示有了真正的作用。后续开发的过程中可以强制 mypy 检查无误后才能上线，借此提高代码的可读性和可维护性。")]),s._v(" "),a("p",[s._v("嗯，很实用，不是吗？下面分享以下如何使用 mypy。")]),s._v(" "),a("h3",{attrs:{id:"_1、安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装"}},[s._v("#")]),s._v(" 1、安装")]),s._v(" "),a("p",[s._v("这个很简单了，pip install mypy 就搞定了。")]),s._v(" "),a("h3",{attrs:{id:"_2、执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、执行"}},[s._v("#")]),s._v(" 2、执行")]),s._v(" "),a("p",[s._v("假如有这样一个 Python 程序，名称叫 demo1.py，内容如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("greeting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里提示有问题")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("f'Hello ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v(" \ny"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyy"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里应该提示有问题")]),s._v("\ngreeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \ngreeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里应该提示有问题")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("代码我已经指出了两处错误，现在让 mypy 检查一下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNly1gwqmko8so1j314m0a2q3l.jpg",alt:""}})]),s._v(" "),a("p",[s._v("果然，mypy 发现了三处错误，并一一提示，非常好用啊。")]),s._v(" "),a("p",[s._v('如果不希望检查某一行，可以在注释上加上"# type: ignore"：')]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyy"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# type: ignore")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("mypy 具有强大且易于使用的类型系统，具有很多优秀的特性，例如类型推断、泛型、可调用类型、元组类型、联合类型和结构子类型。")]),s._v(" "),a("h3",{attrs:{id:"_3、常用的内置类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、常用的内置类型"}},[s._v("#")]),s._v(" 3、常用的内置类型")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNly1gwqms4df4yj314y0smdj3.jpg",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_4、配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、配置文件"}},[s._v("#")]),s._v(" 4、配置文件")]),s._v(" "),a("p",[s._v("mypy 将依次查找当前目录下配置文件")]),s._v(" "),a("ol",[a("li",[s._v("mypy.ini")]),s._v(" "),a("li",[s._v(".mypy.ini")]),s._v(" "),a("li",[s._v("pyproject.toml")]),s._v(" "),a("li",[s._v("setup.cfg")])]),s._v(" "),a("p",[s._v("如果还找不到，则依次寻找下面的配置文件：")]),s._v(" "),a("ol",[a("li",[s._v("$XDG_CONFIG_HOME/mypy/config")]),s._v(" "),a("li",[s._v("~/.config/mypy/config")]),s._v(" "),a("li",[s._v("~/.mypy.ini")])]),s._v(" "),a("p",[s._v("此外，你也可以使用"),a("code",[s._v("--config-file")]),s._v(" 指定配置文件。")]),s._v(" "),a("p",[s._v("一个典型的 mypy.ini 配置文件如下：")]),s._v(" "),a("div",{staticClass:"language-ini line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Global options:")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("[mypy]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("python_version")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" 3.7")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("warn_return_any")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" True")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("warn_unused_configs")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" True")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Per-module options:")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("[mypy-mycode.foo.*]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("disallow_untyped_defs")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" True")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("[mypy-mycode.bar]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("warn_return_any")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" False")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("[mypy-somelibrary]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ignore_missing_imports")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" True")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("配置文件的详细说明，见官方文档：https://mypy.readthedocs.io/en/stable/")]),s._v(" "),a("p",[s._v("常见配置项：")]),s._v(" "),a("ul",[a("li",[s._v("files 逗号分隔的路径列表，如果命令行上没有给出，则应由 mypy 检查，支持递归。")]),s._v(" "),a("li",[s._v("exclude 应忽略检查的文件名、目录名和路径")]),s._v(" "),a("li",[s._v("ignore_missing_imports 禁止有关无法解析的导入的错误消息。")]),s._v(" "),a("li",[s._v("disallow_untyped_defs 不允许定义没有类型注释或类型注释不完整的函数。")]),s._v(" "),a("li",[s._v("plugins 逗号分隔的 mypy 插件列表")])]),s._v(" "),a("h2",{attrs:{id:"最后的话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后的话"}},[s._v("#")]),s._v(" 最后的话")]),s._v(" "),a("p",[s._v("mypy 是自动化测试中很重要的一部分，可以帮助我们检查 Python 语言的类型提示是否正确，减少代码的 bug，推荐 Python 开发的朋友们一定要用一用。今天的分享就到这里，如果有收获，请点赞转发关注，感谢支持。")])])}),[],!1,null,null,null);t.default=e.exports}}]);