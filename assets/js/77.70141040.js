(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{660:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("前两天在 GitHub 浏览 Python 的三方库时，看到了以下图片")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr54djurzej31580aswet.jpg",alt:""}})]),s._v(" "),a("p",[s._v("就像 https 那个绿色锁的标志一样，看着很可信，让人用着放心，很多开源项目都有这些图标。")]),s._v(" "),a("p",[s._v("看到 coverage 是 98%，我产生了疑问，这是手工统计的，还是程序自动测试出来的呢？")]),s._v(" "),a("p",[s._v("如果是手工统计的，肯定都往高了写，这样的数据也就没有价值，如果是程序自动测试出来的，想着都觉得复杂，是怎么实现的呢？带着这些疑问，我点击了那个 coverage 98%，跳转到了 https://coveralls.io/ 的页面。")]),s._v(" "),a("p",[s._v("探索了一番，发现原来这是叫 coveralls 的三方库实现的，用于在线实时显示单元测试的覆盖率，测试数据是通过 coverage 来跑出来的。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr54jyyy9mj316p0u075z.jpg",alt:""}})]),s._v(" "),a("p",[s._v("好奇的我 pip install 安装了下，拿自己之前的程序，写了几个单元测试，用了下这两条命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("coverage run --source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dbinterface -m pytest tests/\ncoverage report -m\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("发现，这个单元测试的覆盖率果然是程序自动统计出来的，coverage，真的牛逼，有了这个，写单元测试就无法偷懒了，有了这个，代码质量就有了量化标准，自动化测试部署也更为可靠。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr550o9bksj315h0u0gp6.jpg",alt:""}})]),s._v(" "),a("p",[s._v("从上面的图中可以看到文件的哪些代码行没有测试到，然后针对性的编写单元测试。还可以生成 html 文件进行查询，更为直观。")]),s._v(" "),a("p",[s._v("猜测 coverage 应该是记录了 pytest 调用的代码行数，然后从全部代码行记录中去除已经测试过的行记录，就是未测试的代码行，从而统计覆盖率。")]),s._v(" "),a("p",[s._v("当时，我不由自主发出了‘卧槽牛逼’，不过仍然有疑问，怎么来检测哪些代码行被执行了呢？ 这可是个技术话，虽然我知道 debug 时可以看到哪些代码行被执行，但是写程序统计出来，我还不太清楚如何去做。")]),s._v(" "),a("p",[s._v("好奇心驱使着我去探索。")]),s._v(" "),a("p",[s._v("首先看下这个 coverage 来自哪里，里面有什么内容：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("py38env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ➜  dbinterface git:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ✗ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" coverage\n/Users/aaron/py38env/bin/coverage\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("可以看到 coverage 的内容：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("py38env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ➜  dbinterface git:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ✗ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /Users/aaron/py38env/bin/coverage\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/Users/aaron/py38env/bin/python3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf-8 -*-")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" re\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" sys\nfrom coverage.cmdline "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" main\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n    sys.argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" re.sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(-script\\.pyw|\\.exe)?$'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(", sys.argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sys.exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("py38env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ➜  dbinterface git:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ✗\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("其实，在命令行执行 coverage，就相当于执行：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("/Users/aaron/py38env/bin/python3 coverage\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("将该文件保存到一个目录中，命名为 main.py，然后使用 PyCharm IDE 开始调试，调试的过程中，发现 "),a("code",[s._v("coverage run --source=dbinterface -m pytest tests/")]),s._v(" 命令会将测试的结果写入到文件 "),a("code",[s._v(".coverage")]),s._v(" 中，再执行 "),a("code",[s._v("coverage report -m")]),s._v(" 时会从该文件统计出覆盖率的数据。")]),s._v(" "),a("p",[s._v("也就是说关键是要弄清楚命令 "),a("code",[s._v("coverage run --source=dbinterface -m pytest tests/")]),s._v(" 的执行过程。")]),s._v(" "),a("p",[s._v("继续 Debug，这里说下，由于我们的命令是在路径 "),a("code",[s._v("/Users/aaron/github/somenzz/dbinterface")]),s._v(" 下执行的，在 Debug 前，先使用 os.chdir 改变程序的工作目录：")]),s._v(" "),a("p",[s._v("main.py")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/Users/aaron/py38env/bin/python3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf-8 -*-")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" re\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" coverage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cmdline "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" main\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" os\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("chdir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Users/aaron/github/somenzz/dbinterface'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'(-script\\.pyw|\\.exe)?$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("然后加入参数，打好断点，追踪。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr5dzqmyzjj31ax0u0did.jpg",alt:""}})]),s._v(" "),a("p",[s._v("最后追踪到这里：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr5e1xzshvj316f0u040k.jpg",alt:""}})]),s._v(" "),a("p",[s._v("这里的 tracer 类就是 CTracer，其源头可以从 collector.py 文件的这段代码看出来：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr5e5va9joj31160nugma.jpg",alt:""}})]),s._v(" "),a("p",[s._v("可以看出 tracer 的原型要么是 CTracer， 要么是 PyTracer。")]),s._v(" "),a("p",[s._v("从作者的注释中可以看到 CTracer 速度非常快，而 PyTracer 相对较慢。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr5e93tvvej30so0703yj.jpg",alt:""}})]),s._v(" "),a("p",[s._v("想看 CTracer 的源代码，结果发现了这个文件")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr5e9yz41vj30nq0rsabo.jpg",alt:""}})]),s._v(" "),a("p",[s._v(".so 文件相当于 windows 的 dll 文件，是动态链接库，需要反编译成汇编语言，然后再分析执行逻辑，这个对我来说太难了，自己又不熟悉汇编，于是放弃。")]),s._v(" "),a("p",[s._v("那就只剩下 PyTracer 了，也行，通过这个了解下，原理应该是类似的，PyTracer 的源代码就是 py 文件，可以直接打开查看。")]),s._v(" "),a("p",[s._v("文件开始的地方，导入了以下三个库：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" atexit\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" dis\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" coverage "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" env\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("其中前三个都是标准库，atexit 是退出处理器，可以注册一个函数，在解释器终止时执行。dis\n是 Python 字节码反汇编器，这两个的使用只有一次，没有派上大用处，可以忽略。")]),s._v(" "),a("p",[s._v("重点就是第三个 sys 模块，这个模块和 os 模块可以说是博大精深，很多程序都会使用到，从包的名称也可以总结规律，名字越短，就越重要，其使用频率就越高。")]),s._v(" "),a("p",[s._v("看 PyTracer 源代码知道 sys.settrace 是起决定作用的，是 coverage 能够统计单元测试覆盖率的核心函数。")]),s._v(" "),a("p",[s._v("下面是对 Python 官方文档对 sys.settrace 的介绍：")]),s._v(" "),a("blockquote",[a("p",[s._v("sys.settrace(tracefunc) 用来设置系统的跟踪函数，使得用户在 Python 中就可以实现 Python 源代码调试器。该函数是特定于单个线程的，所以要让调试器支持多线程，必须为正在调试的每个线程都用 settrace() 注册一个跟踪函数，或使用 threading.settrace()。")])]),s._v(" "),a("blockquote",[a("p",[s._v("跟踪函数应接收三个参数：frame、event 和 arg。frame 是当前的堆栈帧。event 是一个字符串：'call'、'line'、'return'、'exception' 或 'opcode'。arg 取决于事件类型。")])]),s._v(" "),a("p",[s._v("官方文档 bb 这么多，说实话我也没太懂，到底咋用呢？ 我网上找了一个例子，比如说文件 trace.py 内容如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stuff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"calling stuff"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("frame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("frame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" printer "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# return itself to keep tracing")]),s._v("\n\nsys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("settrace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("printer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nstuff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("也就是说执行函数之前，加上 "),a("code",[s._v("sys.settrace")]),s._v("。执行该文件，可以得到以下结果：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("py38env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ➜  tmp python trace.py\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("frame at 0x7fa6bff5a440, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'trace.py'")]),s._v(", line "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(", code stuff"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" call None\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("frame at 0x7fa6bff5a440, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'trace.py'")]),s._v(", line "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(", code stuff"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" line None\ncalling stuff\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("frame at 0x7fa6bff5a440, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'trace.py'")]),s._v(", line "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(", code stuff"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" None\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("py38env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ➜  tmp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("程序执行的行数，执行的操作都完整的显示了出来，将这些数据保存到文件中，就可以进行单元测试覆盖率的统计了。")]),s._v(" "),a("p",[s._v("虽然无法方便的查询 CTracer 源码，但是从 PyTracer 这里还是学习到了 coverage 统计单元测试覆盖率的统计方法。")]),s._v(" "),a("p",[s._v("一次偶遇 coveralls 让我见识了 Python 原来还可以统计代码的执行情况，真的牛逼了。")]),s._v(" "),a("p",[s._v("趁热打铁，我用 coveralls 的状态图标也发布了一个工具库：dbinterface，单元测试覆盖率 89%:")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gr5iimmxh2j311k0u0jsc.jpg",alt:""}})]),s._v(" "),a("p",[s._v("这个一个数据库操作的通用接口，使用起来是相当的简单，从此读写各种数据库都不是事：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dbinterface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("database_client "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" DataBaseClientFactory\n\nclient1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" DataBaseClientFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            dbtype"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postgres"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5432")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postgres"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            pwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"121113"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            database"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postgres"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nclient2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" DataBaseClientFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            dbtype"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mysql"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaron"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            pwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaron"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            database"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"information_schema"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" client1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"select current_date"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrows_affeted "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" client1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"insert into tmp_test_table values(%s, %s)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaron"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrows_export "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"select * from information_schema.TABLES"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            params"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            file_path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/Users/aaron/tmp/mysql_tables.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            delimeter"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0x02"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            quote"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0x03"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            all_col_as_str"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("assert")]),s._v(" rows_export "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("p",[s._v("项目地址：https://github.com/somenzz/dbinterface")]),s._v(" "),a("p",[s._v("好奇心是学习技术的原动力，关注公众号「Python七号」，每周分享一个 Python 小技术。")])])}),[],!1,null,null,null);t.default=e.exports}}]);