(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{803:function(_,v,t){"use strict";t.r(v);var a=t(7),l=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[_._v("Python 3.11 将于 2022 年 10 月发布，Python 的作者 Guido Van Rossum（龟叔） 计划将 Python 的速度提高两倍，他未来四年的总体目标是将 Python 的速度提高五倍。")]),_._v(" "),t("p",[_._v("虽然 Python 是金融领域使用最广泛的计算机语言之一，但它更常用于数据分析等特定活动，而不是实际的交易软件。这是由于 Python 的抽象水平更高，这使得它作为解释语言的速度比 C++ 或 Java 等编译型语言慢。")]),_._v(" "),t("p",[_._v("想改变这一点。Van Rossum 在上一次 Python 语言峰会上表示，当 3.11 版本于 2022 年 10 月发布时，他计划将 Python 的速度提高两倍。")]),_._v(" "),t("p",[_._v("Van Rossum 的演示"),t("a",{attrs:{href:"https://github.com/faster-cpython/ideas/blob/main/FasterCPythonDark.pdf",target:"_blank",rel:"noopener noreferrer"}},[_._v("文稿"),t("OutboundLink")],1),_._v("可在 Github 上找到，详细介绍了他计划如何做到这一点，为了方便你了解这一计划，我把文稿内容翻译如下：")]),_._v(" "),t("h2",{attrs:{id:"香农计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#香农计划"}},[_._v("#")]),_._v(" 香农计划")]),_._v(" "),t("ul",[t("li",[_._v("参与该计划 - "),t("a",{attrs:{href:"https://github.com/markshannon/faster-cpython",target:"_blank",rel:"noopener noreferrer"}},[_._v("github.com/markshannon/faster-cpython"),t("OutboundLink")],1)]),_._v(" "),t("li",[_._v("基于 “HotPy、HotPy2” 的经验")]),_._v(" "),t("li",[_._v("未来四年将 Python 的速度提升 5 倍，每年 1.5 倍")]),_._v(" "),t("li",[_._v("寻找基金会")])]),_._v(" "),t("h2",{attrs:{id:"感谢-python"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#感谢-python"}},[_._v("#")]),_._v(" 感谢 Python")]),_._v(" "),t("ul",[t("li",[_._v("当我（Guido Van Rossum，下同）退休在家时我感到无聊")]),_._v(" "),t("li",[_._v("我向微软申请了职位，被雇用了")]),_._v(" "),t("li",[_._v("微软给了我充分的自由来发起项目")]),_._v(" "),t("li",[_._v("我选择回归本源")]),_._v(" "),t("li",[_._v("这就是微软回馈 Python 的方式")])]),_._v(" "),t("h2",{attrs:{id:"开放讨论、开源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开放讨论、开源"}},[_._v("#")]),_._v(" 开放讨论、开源")]),_._v(" "),t("ul",[t("li",[_._v("已经组建了小团队（Eric Snow, Mark Shannon, Guido, 可能会扩大）")]),_._v(" "),t("li",[_._v("与核心开发人员完全开放的协作")]),_._v(" "),t("li",[_._v("保持 CPython 的增量更改\n"),t("ul",[t("li",[_._v("没有长期存在的分叉/分支，6,000 行 PR 不足为奇")]),_._v(" "),t("li",[_._v("我们也会负责维护和支持")])])]),_._v(" "),t("li",[_._v("一切都是开源的\n"),t("ul",[t("li",[_._v("开放所有具体项目的仓库")]),_._v(" "),t("li",[_._v("开放 GitHub 仓库上的所有讨论")])])])]),_._v(" "),t("h2",{attrs:{id:"限制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[_._v("#")]),_._v(" 限制")]),_._v(" "),t("ul",[t("li",[_._v("不破坏稳定的 ABI（应用程序二进制接口） 兼容性")]),_._v(" "),t("li",[_._v("不破坏有限的 API 兼容性")]),_._v(" "),t("li",[_._v("不打破或降低极端情况的运行速度\n"),t("ul",[t("li",[_._v("例如，在堆栈上 push 1,000,000 个元素")])])]),_._v(" "),t("li",[_._v("保持代码可维护")]),_._v(" "),t("li",[_._v("这很难！")])]),_._v(" "),t("h2",{attrs:{id:"我们能做什么-不能做什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#我们能做什么-不能做什么"}},[_._v("#")]),_._v(" 我们能做什么，不能做什么")]),_._v(" "),t("ul",[t("li",[_._v("不更改基础对象，类型布局\n"),t("ul",[t("li",[_._v("例如，必须保持引用计数语义")])])]),_._v(" "),t("li",[_._v("可以改变字节码、栈帧布局")]),_._v(" "),t("li",[_._v("可以改变编译器、解释器")]),_._v(" "),t("li",[_._v("可以改变大多数对象的内部实现\n"),t("ul",[t("li",[_._v("并非所有对象的布局都是公开的")])])])]),_._v(" "),t("h2",{attrs:{id:"_3-11-如何提升-2-倍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-如何提升-2-倍"}},[_._v("#")]),_._v(" 3.11 如何提升 2 倍")]),_._v(" "),t("ul",[t("li",[_._v("自适应的、专门的字节码解释器\n"),t("ul",[t("li",[_._v("与内联缓存类似，但更全面")])])]),_._v(" "),t("li",[_._v("各种其他单独的优化\n"),t("ul",[t("li",[_._v("例如，优化帧堆栈，更快的调用，调整分配")]),_._v(" "),t("li",[_._v("“零开销”的异常处理")])])]),_._v(" "),t("li",[_._v("我们还不确定我们一定会达到 2 倍！\n"),t("ul",[t("li",[_._v("但保持乐观和好奇")])])])]),_._v(" "),t("h2",{attrs:{id:"其他我们可以做的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他我们可以做的"}},[_._v("#")]),_._v(" 其他我们可以做的")]),_._v(" "),t("ul",[t("li",[_._v("提示启动时间")]),_._v(" "),t("li",[_._v("更改 pyc 文件格式")]),_._v(" "),t("li",[_._v("更快的整数")]),_._v(" "),t("li",[_._v("将 __dict__ 置于固定偏移量 (-1?)")]),_._v(" "),t("li",[_._v('"隐藏的类"')]),_._v(" "),t("li",[_._v("标记号码（但... ABI 问题）")])]),_._v(" "),t("h2",{attrs:{id:"_3-11-后的计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-后的计划"}},[_._v("#")]),_._v(" 3.11 后的计划")]),_._v(" "),t("ul",[t("li",[_._v("取决于我们管理 3.11 的内容")]),_._v(" "),t("li",[_._v("5 倍加速，我们必须要有创意")]),_._v(" "),t("li",[_._v("我们的未来会有机器码生成")]),_._v(" "),t("li",[_._v("可能发展稳定的ABI/有限的API")])]),_._v(" "),t("h2",{attrs:{id:"谁受益比较大"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谁受益比较大"}},[_._v("#")]),_._v(" 谁受益比较大")]),_._v(" "),t("ul",[t("li",[_._v("运行 CPU 密集型纯 Python 代码的用户")]),_._v(" "),t("li",[_._v("使用 Python 构建网站的用户")]),_._v(" "),t("li",[_._v("碰巧使用 Python 工具的用户")])]),_._v(" "),t("h2",{attrs:{id:"谁受益不大"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谁受益不大"}},[_._v("#")]),_._v(" 谁受益不大")]),_._v(" "),t("ul",[t("li",[_._v("已经用 C 语言编写的代码")]),_._v(" "),t("li",[_._v("numpy、tenserflow 等")]),_._v(" "),t("li",[_._v("I/O 密集型任务")]),_._v(" "),t("li",[_._v("多线程代码")]),_._v(" "),t("li",[_._v("算法效率低下的代码")])]),_._v(" "),t("h2",{attrs:{id:"我们的东西在哪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#我们的东西在哪"}},[_._v("#")]),_._v(" 我们的东西在哪")]),_._v(" "),t("ul",[t("li",[_._v("PEP 659：专业自适应的编译器")]),_._v(" "),t("li",[_._v("repos：\n"),t("ul",[t("li",[_._v("github.com/faster-cpython/cpython\n"),t("ul",[t("li",[_._v("cpython 的 fork，用于暂存分支")])])]),_._v(" "),t("li",[_._v("github.com/faster-cpython/ideas\n"),t("ul",[t("li",[_._v("讨论跟踪")])])]),_._v(" "),t("li",[_._v("github.com/faster-cpython/tools\n"),t("ul",[t("li",[_._v("分析、基准测试等工具")])])])])])]),_._v(" "),t("h2",{attrs:{id:"最后"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[_._v("#")]),_._v(" 最后")]),_._v(" "),t("p",[_._v("总结一下，也就是自适应字节码解释器、帧堆栈优化、“零开销”异常处理，这些可能会让 Python 的速度翻一番，未来的更改可能包括坚实的 ABI（应用程序二进制接口）或机器代码生成，以进一步提高 Python 的性能。")]),_._v(" "),t("p",[_._v("相信龟叔，让我们拭目期待吧。")])])}),[],!1,null,null,null);v.default=l.exports}}]);